syntax = "proto3";

import "google/protobuf/empty.proto";

package pb.v1;
option java_package = "co.ledger.lama.manager.protobuf";

// Exposes a gRPC interface to manage synchronization of
// account infos and transactions.
service AccountManagerService {
    rpc RegisterAccount(RegisterAccountRequest) returns (RegisterAccountResult) {}
    rpc UpdateAccount(UpdateAccountRequest) returns (google.protobuf.Empty) {}
    rpc UnregisterAccount(UnregisterAccountRequest) returns (UnregisterAccountResult) {}
    rpc GetAccountInfo(AccountInfoRequest) returns (AccountInfoResult) {}
}

message RegisterAccountRequest {
    // KeychainId for Bitcoin or PublicKey for account based coins
    string key = 1;
    CoinFamily coin_family = 2;
    Coin coin = 3;
    uint64 sync_frequency = 4;
    oneof cursor {
        BlockHeightState block_height = 5;
    }
}

message UpdateAccountRequest {
    bytes account_id = 1;
    uint64 sync_frequency = 2;
}

message BlockHeightState {
    uint64 state = 1;
}

message UnregisterAccountRequest {
    bytes account_id = 1;
}

message RegisterAccountResult {
    bytes account_id = 1;
    bytes sync_id = 2;
    uint64 sync_frequency = 3;
}

message UnregisterAccountResult {
    bytes account_id = 1;
    bytes sync_id = 2;
}

message AccountInfoRequest {
    bytes account_id = 1;
}

message AccountInfoResult {
    bytes account_id = 1;
    string key = 2;
    uint64 sync_frequency = 3;
    SyncEvent last_sync_event = 4;
    CoinFamily coin_family = 5;
    Coin coin = 6;
}

message SyncEvent {
    bytes sync_id = 1;
    string status = 2;
    bytes payload = 3;
}

enum CoinFamily {
    bitcoin = 0;
}

enum Coin {
    btc = 0;
    btc_testnet = 1;
}
